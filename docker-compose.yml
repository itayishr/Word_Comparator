version: '3.8'

services:
  rest_api:
    build:
      context: .
      dockerfile: Dockerfile
    image: rest_api_server
    volumes:
      - .:/app
    env_file:
      - .env
    deploy:
        replicas: 2

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: celery_worker
    command: /bin/sh -c "celery -A worker.celery worker --loglevel=info --concurrency=10 -n worker1.%h"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    ports:
      - "5674:5674"
      - "15674:15674"
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - rest_api

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6780:6780'
    command: redis-server --save 20 1 --loglevel warning --port 6780
    volumes:
      - redis:/data
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
volumes:
  redis:
    driver: local